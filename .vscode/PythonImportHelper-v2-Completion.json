[
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "FieldEntity",
        "importPath": "app_content.domain.entities.data_entity",
        "description": "app_content.domain.entities.data_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.data_entity",
        "documentation": {}
    },
    {
        "label": "FieldEntity",
        "importPath": "app_content.domain.entities.data_entity",
        "description": "app_content.domain.entities.data_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.data_entity",
        "documentation": {}
    },
    {
        "label": "FieldEntity",
        "importPath": "app_content.domain.entities.data_entity",
        "description": "app_content.domain.entities.data_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.data_entity",
        "documentation": {}
    },
    {
        "label": "FieldEntity",
        "importPath": "app_content.domain.entities.data_entity",
        "description": "app_content.domain.entities.data_entity",
        "isExtraImport": true,
        "detail": "app_content.domain.entities.data_entity",
        "documentation": {}
    },
    {
        "label": "Entity",
        "importPath": "app_content.application.interface.entity",
        "description": "app_content.application.interface.entity",
        "isExtraImport": true,
        "detail": "app_content.application.interface.entity",
        "documentation": {}
    },
    {
        "label": "Entity",
        "importPath": "app_content.application.interface.entity",
        "description": "app_content.application.interface.entity",
        "isExtraImport": true,
        "detail": "app_content.application.interface.entity",
        "documentation": {}
    },
    {
        "label": "UseCase",
        "importPath": "app_content.application.interface.usecase",
        "description": "app_content.application.interface.usecase",
        "isExtraImport": true,
        "detail": "app_content.application.interface.usecase",
        "documentation": {}
    },
    {
        "label": "UseCase",
        "importPath": "app_content.application.interface.usecase",
        "description": "app_content.application.interface.usecase",
        "isExtraImport": true,
        "detail": "app_content.application.interface.usecase",
        "documentation": {}
    },
    {
        "label": "Repository",
        "importPath": "app_content.application.interface.repository",
        "description": "app_content.application.interface.repository",
        "isExtraImport": true,
        "detail": "app_content.application.interface.repository",
        "documentation": {}
    },
    {
        "label": "Repository",
        "importPath": "app_content.application.interface.repository",
        "description": "app_content.application.interface.repository",
        "isExtraImport": true,
        "detail": "app_content.application.interface.repository",
        "documentation": {}
    },
    {
        "label": "RepositoryImpl",
        "importPath": "app_content.application.interface.repositoryimpl",
        "description": "app_content.application.interface.repositoryimpl",
        "isExtraImport": true,
        "detail": "app_content.application.interface.repositoryimpl",
        "documentation": {}
    },
    {
        "label": "RepositoryImpl",
        "importPath": "app_content.application.interface.repositoryimpl",
        "description": "app_content.application.interface.repositoryimpl",
        "isExtraImport": true,
        "detail": "app_content.application.interface.repositoryimpl",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "app_content.application.interface.view",
        "description": "app_content.application.interface.view",
        "isExtraImport": true,
        "detail": "app_content.application.interface.view",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "app_content.application.interface.view",
        "description": "app_content.application.interface.view",
        "isExtraImport": true,
        "detail": "app_content.application.interface.view",
        "documentation": {}
    },
    {
        "label": "FieldMapper",
        "importPath": "app_content.application.interface.fieldmapper",
        "description": "app_content.application.interface.fieldmapper",
        "isExtraImport": true,
        "detail": "app_content.application.interface.fieldmapper",
        "documentation": {}
    },
    {
        "label": "FieldMapper",
        "importPath": "app_content.application.interface.fieldmapper",
        "description": "app_content.application.interface.fieldmapper",
        "isExtraImport": true,
        "detail": "app_content.application.interface.fieldmapper",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "CommandError",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "CommandParser",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "GenerateFiles",
        "importPath": "app_content.application.usecases.generate_files",
        "description": "app_content.application.usecases.generate_files",
        "isExtraImport": true,
        "detail": "app_content.application.usecases.generate_files",
        "documentation": {}
    },
    {
        "label": "PythonEntity",
        "importPath": "app_content.infraestructure.generators.Python.entity",
        "description": "app_content.infraestructure.generators.Python.entity",
        "isExtraImport": true,
        "detail": "app_content.infraestructure.generators.Python.entity",
        "documentation": {}
    },
    {
        "label": "PythonUseCase",
        "importPath": "app_content.infraestructure.generators.Python.usecase",
        "description": "app_content.infraestructure.generators.Python.usecase",
        "isExtraImport": true,
        "detail": "app_content.infraestructure.generators.Python.usecase",
        "documentation": {}
    },
    {
        "label": "PythonRepository",
        "importPath": "app_content.infraestructure.generators.Python.repository",
        "description": "app_content.infraestructure.generators.Python.repository",
        "isExtraImport": true,
        "detail": "app_content.infraestructure.generators.Python.repository",
        "documentation": {}
    },
    {
        "label": "PythonRepositoryImpl",
        "importPath": "app_content.infraestructure.generators.Python.repositoryimpl",
        "description": "app_content.infraestructure.generators.Python.repositoryimpl",
        "isExtraImport": true,
        "detail": "app_content.infraestructure.generators.Python.repositoryimpl",
        "documentation": {}
    },
    {
        "label": "PythonView",
        "importPath": "app_content.infraestructure.generators.Python.view",
        "description": "app_content.infraestructure.generators.Python.view",
        "isExtraImport": true,
        "detail": "app_content.infraestructure.generators.Python.view",
        "documentation": {}
    },
    {
        "label": "traceback",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "traceback",
        "description": "traceback",
        "detail": "traceback",
        "documentation": {}
    },
    {
        "label": "DjangoFieldMapper",
        "importPath": "app_content.infraestructure.mappers.djangofieldmapper",
        "description": "app_content.infraestructure.mappers.djangofieldmapper",
        "isExtraImport": true,
        "detail": "app_content.infraestructure.mappers.djangofieldmapper",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "ModelDTOInput",
        "kind": 6,
        "importPath": "app_content.application.dtos.modelDTO",
        "description": "app_content.application.dtos.modelDTO",
        "peekOfCode": "class ModelDTOInput:\n    name: str\n    fields: list\n    abstract: bool\n@dataclass\nclass ModelDTOOutput:\n    model: Optional[dict]\n    message: Optional[str]\n    success: bool",
        "detail": "app_content.application.dtos.modelDTO",
        "documentation": {}
    },
    {
        "label": "ModelDTOOutput",
        "kind": 6,
        "importPath": "app_content.application.dtos.modelDTO",
        "description": "app_content.application.dtos.modelDTO",
        "peekOfCode": "class ModelDTOOutput:\n    model: Optional[dict]\n    message: Optional[str]\n    success: bool",
        "detail": "app_content.application.dtos.modelDTO",
        "documentation": {}
    },
    {
        "label": "Dto",
        "kind": 6,
        "importPath": "app_content.application.interface.dto",
        "description": "app_content.application.interface.dto",
        "peekOfCode": "class Dto(ABC):\n    @abstractmethod\n    def execute(self,):\n        pass",
        "detail": "app_content.application.interface.dto",
        "documentation": {}
    },
    {
        "label": "Entity",
        "kind": 6,
        "importPath": "app_content.application.interface.entity",
        "description": "app_content.application.interface.entity",
        "peekOfCode": "class Entity(ABC):\n    @abstractmethod\n    def execute(self, model: ModelEntity, basepath: str,):\n        pass",
        "detail": "app_content.application.interface.entity",
        "documentation": {}
    },
    {
        "label": "FieldMapper",
        "kind": 6,
        "importPath": "app_content.application.interface.fieldmapper",
        "description": "app_content.application.interface.fieldmapper",
        "peekOfCode": "class FieldMapper(ABC):\n    @abstractmethod\n    def execute(self, model_name: str, model_path: str) -> list[FieldEntity]:\n        pass",
        "detail": "app_content.application.interface.fieldmapper",
        "documentation": {}
    },
    {
        "label": "Repository",
        "kind": 6,
        "importPath": "app_content.application.interface.repository",
        "description": "app_content.application.interface.repository",
        "peekOfCode": "class Repository(ABC):\n    @abstractmethod\n    def execute(self,model:ModelEntity, basepath: str,):\n        pass",
        "detail": "app_content.application.interface.repository",
        "documentation": {}
    },
    {
        "label": "RepositoryImpl",
        "kind": 6,
        "importPath": "app_content.application.interface.repositoryimpl",
        "description": "app_content.application.interface.repositoryimpl",
        "peekOfCode": "class RepositoryImpl(ABC):\n    @abstractmethod\n    def execute(self, model: ModelEntity, basepath:str):\n        pass\n    @abstractmethod\n    def get_all(self, model: ModelEntity, nombre:str)->str:\n        pass\n    @abstractmethod\n    def get_by_id(self, model: ModelEntity, nombre:str)->str:\n        pass",
        "detail": "app_content.application.interface.repositoryimpl",
        "documentation": {}
    },
    {
        "label": "UseCase",
        "kind": 6,
        "importPath": "app_content.application.interface.usecase",
        "description": "app_content.application.interface.usecase",
        "peekOfCode": "class UseCase(ABC):\n    @abstractmethod\n    def execute(self,model:ModelEntity, basepath: str,):\n        pass\n    @abstractmethod\n    def get(self,model:ModelEntity, nombre:str)->str:\n        pass\n    @abstractmethod\n    def create(self,model:ModelEntity, nombre:str)->str:\n        pass",
        "detail": "app_content.application.interface.usecase",
        "documentation": {}
    },
    {
        "label": "View",
        "kind": 6,
        "importPath": "app_content.application.interface.view",
        "description": "app_content.application.interface.view",
        "peekOfCode": "class View(ABC):\n    @abstractmethod\n    def execute(self, model: ModelEntity, basepath: str,):\n        pass\n    @abstractmethod\n    def get(self, model: ModelEntity, nombre:str)->str:\n        pass\n    @abstractmethod\n    def post(self, model: ModelEntity, nombre:str)->str:\n        pass",
        "detail": "app_content.application.interface.view",
        "documentation": {}
    },
    {
        "label": "GenerateFiles",
        "kind": 6,
        "importPath": "app_content.application.usecases.generate_files",
        "description": "app_content.application.usecases.generate_files",
        "peekOfCode": "class GenerateFiles:\n    def __init__(\n            self, \n            model_name: str,\n            model_path: str,\n            base_path: str,\n            fieldmapper: FieldMapper,\n            # dto: GenerateDTO, \n            entity: Entity, \n            usecase: UseCase, ",
        "detail": "app_content.application.usecases.generate_files",
        "documentation": {}
    },
    {
        "label": "FieldEntity",
        "kind": 6,
        "importPath": "app_content.domain.entities.data_entity",
        "description": "app_content.domain.entities.data_entity",
        "peekOfCode": "class FieldEntity:\n    nombre: str\n    tipo: str",
        "detail": "app_content.domain.entities.data_entity",
        "documentation": {}
    },
    {
        "label": "ModelEntity",
        "kind": 6,
        "importPath": "app_content.domain.entities.model_entity",
        "description": "app_content.domain.entities.model_entity",
        "peekOfCode": "class ModelEntity():\n    nombre : str\n    fields : list[FieldEntity]\n    abstract : Optional[bool] = None\n    def __str__(self):\n        return self.nombre",
        "detail": "app_content.domain.entities.model_entity",
        "documentation": {}
    },
    {
        "label": "PythonEntity",
        "kind": 6,
        "importPath": "app_content.infraestructure.generators.Python.entity",
        "description": "app_content.infraestructure.generators.Python.entity",
        "peekOfCode": "class PythonEntity(Entity):\n    def execute(self, model: ModelEntity, basepath: str,):\n        ''' Generate the files for the model '''\n        nombre = f\"{model.nombre[0].capitalize()}{model.nombre[1:]}\"\n        path = os.path.join(basepath, \"domain\", \"entities\")\n        os.makedirs(path, exist_ok=True)\n        file_path = os.path.join(path, f\"{model.nombre}_entity.py\")\n        try:\n            with open(file_path, \"w\") as f:\n                f.write(f\"from dataclasses import dataclass\\n\\n\")",
        "detail": "app_content.infraestructure.generators.Python.entity",
        "documentation": {}
    },
    {
        "label": "PythonRepository",
        "kind": 6,
        "importPath": "app_content.infraestructure.generators.Python.repository",
        "description": "app_content.infraestructure.generators.Python.repository",
        "peekOfCode": "class PythonRepository(Repository):\n    def execute(self, model: ModelEntity, basepath: str,):\n        ''' Generate the files for the model '''\n        nombre = f\"{model.nombre[0].capitalize()}{model.nombre[1:]}\"\n        path = os.path.join(basepath, \"application\", \"repositories\")\n        os.makedirs(path, exist_ok=True)\n        file_path = os.path.join(path, f\"{model.nombre}_repository.py\")\n        try:\n            with open(file_path, \"w\") as f:\n                f.write(f\"from abc import ABC, abstractmethod\\n\")",
        "detail": "app_content.infraestructure.generators.Python.repository",
        "documentation": {}
    },
    {
        "label": "PythonRepositoryImpl",
        "kind": 6,
        "importPath": "app_content.infraestructure.generators.Python.repositoryimpl",
        "description": "app_content.infraestructure.generators.Python.repositoryimpl",
        "peekOfCode": "class PythonRepositoryImpl(RepositoryImpl):\n    def execute(self, model: ModelEntity, basepath: str,):\n        ''' Generate the files for the model '''\n        nombre = f\"{model.nombre[0].capitalize()}{model.nombre[1:]}\"\n        path = os.path.join(basepath, \"infraestructure\", \"repositories\")\n        os.makedirs(path, exist_ok=True)\n        file_path = os.path.join(path, f\"django{model.nombre}_repository.py\")\n        try:\n            with open(file_path, \"w\") as f:\n                f.write(f\"from {basepath}.application.repositories.{model.nombre}_repository import {nombre}Repository\\n\")",
        "detail": "app_content.infraestructure.generators.Python.repositoryimpl",
        "documentation": {}
    },
    {
        "label": "PythonUseCase",
        "kind": 6,
        "importPath": "app_content.infraestructure.generators.Python.usecase",
        "description": "app_content.infraestructure.generators.Python.usecase",
        "peekOfCode": "class PythonUseCase(UseCase):\n    def execute(self, model: ModelEntity, basepath: str,):\n        ''' Generate the files for the model '''\n        nombre = f\"{model.nombre[0].capitalize()}{model.nombre[1:]}\"\n        path = os.path.join(basepath, \"application\", \"usecases\")\n        os.makedirs(path, exist_ok=True)\n        file_path = os.path.join(path, f\"{model.nombre}_usecase.py\")\n        try:\n            with open(file_path, \"w\") as f:\n                f.write(f\"from {basepath}.domain.entities.{model.nombre}_entity import {nombre}Entity\\n\\n\")",
        "detail": "app_content.infraestructure.generators.Python.usecase",
        "documentation": {}
    },
    {
        "label": "PythonView",
        "kind": 6,
        "importPath": "app_content.infraestructure.generators.Python.view",
        "description": "app_content.infraestructure.generators.Python.view",
        "peekOfCode": "class PythonView(View):\n    def execute(self, model: ModelEntity, basepath: str,):\n        ''' Generate the files for the model '''\n        nombre = f\"{model.nombre[0].capitalize()}{model.nombre[1:]}\"\n        path = os.path.join(basepath, \"application\", \"views\")\n        os.makedirs(path, exist_ok=True)\n        file_path = os.path.join(path, f\"{model.nombre}_view.py\")\n        try:\n            with open(file_path, \"w\") as f:\n                f.write(f\"from {basepath}.application.usecase.{model.nombre}_usecase import {nombre}UseCase\\n\")",
        "detail": "app_content.infraestructure.generators.Python.view",
        "documentation": {}
    },
    {
        "label": "DjangoFieldMapper",
        "kind": 6,
        "importPath": "app_content.infraestructure.mappers.djangofieldmapper",
        "description": "app_content.infraestructure.mappers.djangofieldmapper",
        "peekOfCode": "class DjangoFieldMapper(FieldMapper):\n    def execute(self, model_name:str, model_path:str,)-> list[FieldEntity]:\n        FIELD_TYPE_MAP = {\n            # 🔸 Básicos\n            \"AutoField\": \"int\",\n            \"BigAutoField\": \"int\",\n            \"SmallAutoField\": \"int\",\n            \"CharField\": \"str\",\n            \"TextField\": \"str\",\n            \"SlugField\": \"str\",",
        "detail": "app_content.infraestructure.mappers.djangofieldmapper",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "app_content.management.commands.crud_cleanarch",
        "description": "app_content.management.commands.crud_cleanarch",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'Generate CRUD clean architecture using a model'\n    def add_arguments(self, parser: CommandParser) -> None:\n        parser.add_argument('--model', required=True, help='Model name to generate')\n        parser.add_argument('--basepath', required=True, help='Base path to generate')\n        parser.add_argument('--model_path', required=True, help='Path to the models.py file')\n        parser.add_argument('--language', required=False, default='python', help='Language to generate (default: python)')\n    def handle(self, *args, **options):\n        model_path = options['model_path']\n        model_name = options['model']",
        "detail": "app_content.management.commands.crud_cleanarch",
        "documentation": {}
    },
    {
        "label": "AppContentConfig",
        "kind": 6,
        "importPath": "app_content.apps",
        "description": "app_content.apps",
        "peekOfCode": "class AppContentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'app_content'",
        "detail": "app_content.apps",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "crudcleanarch.asgi",
        "description": "crudcleanarch.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "crudcleanarch.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-ub)x4#+3snqfr*47l%8&r%)^v0&vau6c=dhl=0*u3-4!e7h8ol'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-ub)x4#+3snqfr*47l%8&r%)^v0&vau6c=dhl=0*u3-4!e7h8ol'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app_content',",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app_content',\n]\nMIDDLEWARE = [",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'crudcleanarch.urls'",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "ROOT_URLCONF = 'crudcleanarch.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "WSGI_APPLICATION = 'crudcleanarch.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "crudcleanarch.settings",
        "description": "crudcleanarch.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudcleanarch.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "crudcleanarch.urls",
        "description": "crudcleanarch.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n]",
        "detail": "crudcleanarch.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "crudcleanarch.wsgi",
        "description": "crudcleanarch.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "crudcleanarch.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'crudcleanarch.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]